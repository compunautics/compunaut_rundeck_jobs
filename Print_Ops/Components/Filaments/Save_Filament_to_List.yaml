- defaultTab: summary
  description: |-
    This job creates and maintains a list of filaments that have been registered in the past.
    - The "Register Filament" job refers to the files created in this job to make it easier to reuse previously used filaments.
  executionEnabled: true
  group: Components/Filaments
  loglevel: INFO
  multipleExecutions: true
  name: Save Filament to List
  nodeFilterEditable: false
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: true
      rankOrder: ascending
      successOnEmptyNodeFilter: false
      threadcount: '2'
    filter: 'name: .*rundeck.*'
  nodesSelectedByDefault: true
  options:
  - description: Provide the filament to save.
    name: filament
    regex: .*_.*
    required: true
  scheduleEnabled: true
  sequence:
    commands:
    - description: Save filament
      interpreterArgsQuoted: false
      script: "#!/usr/bin/python\n\nimport os\nimport pwd\nimport grp\nimport json\n\
        \n# DEFINE VARIABLES\nfilament = \"@option.filament@\"\nfilament_path = \"\
        /var/rundeck/projects/Print_Ops/etc/filament_list.json\"\nfilament_list =\
        \ []\n\n# CREATE OR APPEND TO LIST\nif os.path.isfile(filament_path):\n  with\
        \ open(filament_path, 'r') as infile:\n    filament_list = json.load(infile)\n\
        \  \n  if filament not in filament_list:\n    filament_list.append(filament)\n\
        \n  with open(filament_path, 'w') as outfile:\n    json.dump(sorted(filament_list),\
        \ outfile)\n\nelse:\n  with open(filament_path, 'w') as outfile:\n    filament_list.append(filament)\n\
        \    json.dump(filament_list, outfile)"
      scriptInterpreter: sudo /usr/bin/python <
    keepgoing: true
    strategy: node-first
  timeout: '300'

